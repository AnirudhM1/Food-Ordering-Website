.main {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    background-color: black;
    height: 25rem;
    width: 30rem;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 2rem;

    .buttonContainer {
        position: relative;

        .exit {
            float: right;
            border-radius: 50%;
        }

        .submit {
            position: absolute;
            margin-top: 2rem;
            left: 50%;
            transform: translateX(-50%);
        }
    }

    .form {
        .field {
            width: 100%;
            position: relative;
            border-bottom: 2px dashed var(--text-primary);
            margin: 4rem auto 1rem;

            .label {
                color: var(--text-primary);
                font-size: 1.2rem;
            }

            .input {
                outline: none;
                border: none;
                display: block;
                margin: 0;
                width: 100%;
                padding: 0.25rem 0;
                background: none;
                color: white;
                font-size: 1.2rem;
                font-weight: bold;
            }
        }

        .label {
            z-index: -1;
            position: absolute;
            transform: translateY(-2rem);
            transform-origin: 0%;
            transition: transform 500ms ease;
        }

        .field:focus-within .label,
        .input:not(:placeholder-shown) + .label {
            transform: scale(0.8) translateY(-5rem);
        }

        .field::after {
            content: "";
            position: relative;
            display: block;
            height: 4px;
            width: 100%;
            background-color: red;
            transform: scaleX(0);
            transform-origin: 0%;
            transition: transform 500ms ease;
            top: 2px;
        }

        .field:focus-within {
            border-color: transparent;
        }

        .field:focus-within::after {
            transform: scaleX(1);
        }
    }
}
